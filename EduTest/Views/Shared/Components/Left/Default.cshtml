@using Edu.Entity;

@model IEnumerable<IGrouping<string, Menu>>
@{
    List<string> icolist = new List<string>() { "fa-list", "fa-diamond", "fa-bar-chart-o", "fa-flask", "fa-edit", "fa-google-wallet", "fa-sheqel", "fa-tty", "fa-bitbucket-square", "fa-dribbble" };
    var iocIndex = 0;
}
<nav class="navbar-default navbar-static-side" role="navigation">
    <div class="sidebar-collapse">
        <ul class="nav metismenu" id="side-menu">
            <li class="nav-header">
                <div class="dropdown profile-element" style="padding-left:50px;">
                    <span>
                        @*<img class="img-circle" src="@(string.IsNullOrEmpty(User.Claims.Single(x=>x.Type=="Photo").Value) ? "/Content/images/NoPhoto.png" :User.Claims.Single(x=>x.Type=="Photo").Value)" alt="@(User.Identity.Name)" style="width:48px; height:48px;" />*@
                    </span>
                    <a data-toggle="dropdown" class="dropdown-toggle" href="table_basic.html#">
                        <span class="clear">
                            <span class="block m-t-xs">
                                <strong class="font-bold">@(User.Identity.Name)</strong>
                            </span> <span class="text-muted text-xs block">管理员 <b class="caret"></b></span>
                        </span>
                    </a>
                    <ul class="dropdown-menu animated fadeInRight m-t-xs">

                        <li><a href="@Url.Content("~/Admin/PersonInfo/Index") ">个人信息</a></li>
                        <li><a href="@Url.Content("~/Admin/PersonPwd/Index") ">修改密码</a></li>

                        <li class="divider"></li>
                        <li>  <a href="@Url.Content("~/Account/Logout")">注销</a></li>
                    </ul>
                </div>
                <div class="logo-element">
                    IN+
                </div>
            </li>
            <li>
                <a href="@Url.Content("~/Admin/Home/Index")"><i class="fa fa-th-large"></i> <span class="nav-label">控制面板</span></a>

            </li>
            @foreach (var item in Model)
            {
                string icofa = iocIndex <= 9 ? icolist[iocIndex] : icolist[0];
                iocIndex++;
                var funMenu = new Edu.Entity.SugarRepository<Menu>().GetList(p => p.FuncID == item.Key).FirstOrDefault();
                <li>
                    <a href="@funMenu.TargetUrl" target="@funMenu.Target" title="@funMenu.FuncDes"><i class="menu-icon fa @(icofa)"></i> <span class="nav-label">@funMenu.FuncName</span><span class="fa arrow"></span></a>
                    <ul class="nav nav-second-level collapse">
                        @foreach (var fun in item)
                        {
                            <li>
                                <a href="@fun.TargetUrl" target="@fun.Target" title="@fun.FuncDes">
                                    @fun.FuncName
                                </a>
                                <b class="arrow"></b>
                            </li>

                        }
                    </ul>
                </li>
            }
        </ul>
    </div>
</nav>
